import pygame


class Entity(pygame.sprite.Sprite):
    def __init__(self, object_id, x, y, attributes):
        super().__init__()
        self.object_id = object_id
        self.x = x
        self.y = y
        self.attributes = attributes

        self.direction = "right"
        self.gravity = 0
        self.invincible = False
        self.last_damaged = pygame.time.get_ticks()
        self.on_platform = False

        self.apply_attributes()

    def apply_attributes(self):
        pass

    def apply_gravity(self):
        self.gravity -= 1
        self.rect.y -= self.gravity

        if self.rect.bottom >= 720:
            self.rect.bottom = 720
            self.gravity = 0

    def attack(self, target):
        if target.invincible == False:
            target.health -= self.attack_damage
            target.last_damaged = pygame.time.get_ticks()
            target.invincible = True
            print(f"{target} is now invincible")

    def change_scale(self, new_scale):
        if new_scale > self.scale:
            if new_scale < self.max_scale:
                pygame.transform.smoothscale_by(self.surf, new_scale)
                self.rect = self.surf.get_rect(
                    bottomleft=(self.rect.bottomleft))
                self.jump_height = 15 / (new_scale / 1.5)
                self.scale = new_scale
        if new_scale < self.scale:
            if new_scale > self.min_scale:
                self.surf_size = 30 * new_scale
                pygame.transform.smoothscale_by(self.surf, new_scale)
                self.rect = self.surf.get_rect(
                    bottomleft=(self.rect.bottomleft))
                self.jump_height = 15 / (new_scale)
                self.scale = new_scale

    def check_block(self, group_handler):
        if group_handler.blocks:
            for block in group_handler.blocks:
                if self.rect.colliderect(block.rect):
                    if self.surf_size > block.surf_size:
                        # BLOCK MOVE
                        pass
                    else:
                        if self.direction == "right":
                            self.rect.x = block.rect.left
                            if self.direction == "left":
                                self.rect.x = block.rect.right

    def check_platform(self, group_handler):
        if group_handler.platforms:
            if pygame.sprite.groupcollide(group_handler.enemies or group_handler.players, group_handler.platforms, False, False):
                for platform in group_handler.platforms:
                    if self.rect.colliderect(platform.rect):
                        self.rect.bottom = platform.rect.y
                        self.gravity = 0
                        self.on_platform = True
            else:
                self.on_platform = False

    def check_invincibility(self):
        if self.invincible:
            if pygame.time.get_ticks() - self.last_damaged > 1000:
                self.invincible = False
                print(f"{self} is no longer invincible")

    def check_walls(self, group_handler):
        if group_handler.walls:
            for wall in group_handler.walls:
                if self.rect.x > wall.rect.x:
                    self.rect.x = wall.rect.right + 1
                if self.rect.x < wall.rect.x:
                    self.rect.x = wall.rect.left - 1
